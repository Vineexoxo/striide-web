name: CI Pipeline

on:
  push:
    branches:
      - main # Trigger on push to main branch

jobs:
  initialise:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Step 2: Login to Dockerhub
      - name: Login Dockerhub
        env:
          DOCKER_USERNAME: 'vineexoxo'
          DOCKER_PASSWORD: 'Dockerina1'
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

  build_backend:
    runs-on: ubuntu-latest
    needs: initialise

    steps:
      # Step 3: Build Backend Docker image
      - name: Build Backend Docker image
        run: |
          cd striide-backend
          docker build -t vineexoxo/striide-backend:latest .

      # Step 4: Push Backend Docker image to Dockerhub
      - name: Push Backend to Dockerhub
        run: docker push vineexoxo/striide-backend:latest

  remove_backend_image:
    runs-on: ubuntu-latest
    needs: build_backend

    steps:
      # Step 5: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker rmi vineexoxo/striide-backend:latest || true

  build_frontend:
    runs-on: ubuntu-latest
    needs: initialise

    steps:
      # Step 6: Build Frontend Docker image
      - name: Build Frontend Docker image
        run: |
          cd striide-frontend
          docker build -t vineexoxo/striide-frontend:latest .

      # Step 7: Push Frontend Docker image to Dockerhub
      - name: Push Frontend to Dockerhub
        run: docker push vineexoxo/striide-frontend:latest

  remove_frontend_image:
    runs-on: ubuntu-latest
    needs: build_frontend

    steps:
      # Step 8: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker rmi vineexoxo/striide-frontend:latest || true

  deploy_backend:
    runs-on: ubuntu-latest
    needs: build_backend

    steps:
      # Step 9: Pull Backend Docker image
      - name: Pull Backend Docker image
        run: sudo docker pull vineexoxo/striide-backend:latest

      # Step 10: Delete old Backend Docker container (if exists)
      - name: Delete old Backend Docker container
        run: sudo docker rm -f striide-backend-container || true

      # Step 11: Run Backend Docker container
      - name: Run Backend Docker container
        env:
          ROCKET_DATABASES: ${{ secrets.ROCKET_DATABASES }}
          ENV: ${{ secrets.ENV }}
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
        run: |
          sudo docker run -d \
            --name striide-backend-container \
            -p 8000:8080 \
            -e ROCKET_DATABASES='{postgres={url="postgresql://cb2s42:xau_1d9LHuNg9qIh0dpuA14x1URryIQ5soOr3@us-east-1.sql.xata.sh/striide:main?sslmode=require", max_connections=1024}}' \
            -e ENV='development' \
            -e XATA_API_KEY='xau_1d9LHuNg9qIh0dpuA14x1URryIQ5soOr3' \
            vineexoxo/striide-backend:latest

      # Step 12: Clean up Docker images (optional)
      - name: Clean up Docker images
        run: sudo docker image prune -f

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: deploy_backend

    steps:
      # Step 13: Pull Frontend Docker image
      - name: Pull Frontend Docker image
        run: sudo docker pull vineexoxo/striide-frontend:latest

      # Step 14: Delete old Frontend Docker container (if exists)
      - name: Delete old Frontend Docker container
        run: sudo docker rm -f striide-frontend-container || true

      # Step 15: Run Frontend Docker container
      - name: Run Frontend Docker container
        env:
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          NEXT_PUBLIC_MAPBOX_MAP_STYLE: ${{ secrets.NEXT_PUBLIC_MAPBOX_MAP_STYLE }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_SEARCH_API_SESSION_TOKEN: ${{ secrets.NEXT_PUBLIC_SEARCH_API_SESSION_TOKEN }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
        run: |
          sudo docker run -d \
            --name striide-frontend-container \
            -e NEXT_PUBLIC_MAPBOX_TOKEN=$NEXT_PUBLIC_MAPBOX_TOKEN \
            -e NEXT_PUBLIC_MAPBOX_MAP_STYLE=$NEXT_PUBLIC_MAPBOX_MAP_STYLE \
            -e NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL \
            -e NEXT_PUBLIC_SEARCH_API_SESSION_TOKEN=$NEXT_PUBLIC_SEARCH_API_SESSION_TOKEN \
            -e NEXT_PUBLIC_BACKEND_URL=$NEXT_PUBLIC_BACKEND_URL \
            -p 3000:3000 \
            vineexoxo/striide-frontend:latest

      # Step 16: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker rmi vineexoxo/striide-frontend:latest || true
